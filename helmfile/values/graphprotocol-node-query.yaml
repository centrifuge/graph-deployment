
config:
  # Overriden in helmfile
  # ipfs: https://ipfs.network.thegraph.com

  # Configuration of connected blockchain metrics and their providers
  chains:
    mainnet:
      providers:
      - label: mainnet
        url: "https://magical-still-grass.quiknode.pro/653d5fa3dd62f717496030b69e5c2b70aa16dfd1/"
        features: [ archive, traces ]
    # rinkeby:
    #   providers:
    #   - label: rinkeby
    #     url:
    #     features: [ archive ]

postgres:
  db: graph
  host: 10.32.66.2
  # replicaHost: postgres-postgres-repl
  user: graphnode
  password:
    fromSecret:
      # Get password from secret generated by postgres operator
      name: graph-pg
      key: password

replicaCount: 2

resources:
  requests:
    cpu: 2
    memory: 4Gi
  limits:
    cpu: 4
    memory: 5Gi
    # ephemeral-storage: 10Gi

role: "query-node"

monitoring:
  enabled: false

# If you are using standalone installation option it could be useful for you to enable ingress to allow your application outside of the cluster connect to query-nodes by graphql.
ingress:
  enabled: enabled
  hosts:
  - graph.cntrfg.com
  - graph.centrifuge.io
  tls:
  - hosts:
    - graph.cntrfg.com
    - graph.centrifuge.io
    secretName: query-node-https
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-issuer"
    # kubernetes.io/ingress.class: nginx

# If you are using standalone installation option it could be useful for you to enable ingress to allow your application outside of the cluster connect to query-nodes by graphql websocket.
ingressWebsocket:
  enabled: disabled
  hosts:
  - graph-ws.ctrfg.com
  - graph-ws.centrifuge.io
  tls:
  - hosts:
    - graph-ws.ctrfg.com
    secretName: query-node-ws-https
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-issuer"
    
